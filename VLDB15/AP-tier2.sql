-- Clinical Data Clustering by Affinity Propagation (Tier 2)

-- Created by: Ishrar Hussain
-- Date: March 1, 2015

DROP TYPE PAL_AP_DATA_T;
CREATE TYPE PAL_AP_DATA_T AS TABLE (
	"ID" INTEGER,
	"VENT_1ST_24HR" DOUBLE,
	"VASO_1ST_24HR" DOUBLE,
	"SEDATIVE_1ST_24HR" DOUBLE,
	"TEMP_MIN" DOUBLE,
	"TEMP_MAX" DOUBLE,
	"TEMP_AVG" DOUBLE,
	"BP_MIN" DOUBLE,
	"BP_MAX" DOUBLE,
	"BP_AVG" DOUBLE,
	"HR_MIN" DOUBLE,
	"HR_MAX" DOUBLE,
	"HR_AVG" DOUBLE,
	"CVP_MIN" DOUBLE,
	"CVP_MAX" DOUBLE,
	"CVP_AVG" DOUBLE,
	"VENTILATED_RR_MIN" DOUBLE,
	"VENTILATED_RR_MAX" DOUBLE,
	"VENTILATED_RR_AVG" DOUBLE,
	"GCS_MIN" DOUBLE,
	"GCS_MAX" DOUBLE,
	"GCS_AVG" DOUBLE,
	"SPONTANEIOUS_RR_MIN" DOUBLE,
	"SPONTANEIOUS_RR_MAX" DOUBLE,
	"SPONTANEIOUS_RR_AVG" DOUBLE,
	"SPO2_MIN" DOUBLE,
	"SPO2_MAX" DOUBLE,
	"SPO2_AVG" DOUBLE,
	"FIO2_MIN" DOUBLE,
	"FIO2_MAX" DOUBLE,
	"FIO2_AVG" DOUBLE,
	"FULLCODE_FLG" DOUBLE,
	"COMFORT_FLG" DOUBLE,
	"DNI_FLG" DOUBLE,
	"DNR_FLG" DOUBLE,
	"CPR_FLG" DOUBLE,
	"OTHER_FLG" DOUBLE
);

DROP TYPE PAL_AP_SEED_T;
CREATE TYPE PAL_AP_SEED_T AS TABLE (
ID INTEGER,
SEED INTEGER
);

DROP TYPE PAL_CONTROL_T;
CREATE TYPE PAL_CONTROL_T AS TABLE(
NAME VARCHAR(50),
INTARGS INTEGER,
DOUBLEARGS DOUBLE,
STRINGARGS VARCHAR(100)
);

DROP TYPE PAL_AP_RESULTS_T;
CREATE TYPE PAL_AP_RESULTS_T AS TABLE(
ID INTEGER,
RESULT INTEGER
);

DROP TABLE PAL_AP_PDATA_TBL;
CREATE COLUMN TABLE PAL_AP_PDATA_TBL (
"POSITION" INTEGER, 
"SCHEMA_NAME" VARCHAR(100), 
"TYPE_NAME" VARCHAR(100), 
"PARAMETER_TYPE" VARCHAR(100)
);
INSERT INTO PAL_AP_PDATA_TBL VALUES (1,CURRENT_SCHEMA,'PAL_AP_DATA_T', 'IN'); 
INSERT INTO PAL_AP_PDATA_TBL VALUES (2,CURRENT_SCHEMA,'PAL_AP_SEED_T', 'IN'); 
INSERT INTO PAL_AP_PDATA_TBL VALUES (3,CURRENT_SCHEMA,'PAL_CONTROL_T', 'IN'); 
INSERT INTO PAL_AP_PDATA_TBL VALUES (4,CURRENT_SCHEMA,'PAL_AP_RESULTS_T', 'OUT'); 

CALL SYS.AFLLANG_WRAPPER_PROCEDURE_DROP(CURRENT_SCHEMA,'PAL_AP');

CALL SYS.AFLLANG_WRAPPER_PROCEDURE_CREATE('AFLPAL', 'AP', CURRENT_SCHEMA, 'PAL_AP', PAL_AP_PDATA_TBL);


DROP TABLE PAL_CLSTR_TIER2_DATA_TBL;
CREATE COLUMN TABLE PAL_CLSTR_TIER2_DATA_TBL AS (
	SELECT
		TO_INTEGER(POP.ID) AS ID
		, CASE WHEN COALESCE(VENT.VENT_1ST_24HR, 0) IS NOT NULL THEN TO_DOUBLE(COALESCE(VENT.VENT_1ST_24HR, 0)) ELSE TO_DOUBLE(-32768) END AS VENT_1ST_24HR
		, CASE WHEN COALESCE(VASO.VASO_1ST_24HR, 0) IS NOT NULL THEN TO_DOUBLE(COALESCE(VASO.VASO_1ST_24HR, 0)) ELSE TO_DOUBLE(-32768) END AS VASO_1ST_24HR
		, CASE WHEN COALESCE(SE.SEDATIVE_1ST_24HR, 0) IS NOT NULL THEN TO_DOUBLE(COALESCE(SE.SEDATIVE_1ST_24HR, 0)) ELSE TO_DOUBLE(-32768) END AS SEDATIVE_1ST_24HR

		, CASE WHEN MI.TEMP_MIN IS NOT NULL THEN TO_DOUBLE(MI.TEMP_MIN) ELSE TO_DOUBLE(-32768) END AS TEMP_MIN
		, CASE WHEN MA.TEMP_MAX IS NOT NULL THEN TO_DOUBLE(MA.TEMP_MAX) ELSE TO_DOUBLE(-32768) END AS TEMP_MAX
		, CASE WHEN AV.TEMP_AVG IS NOT NULL THEN TO_DOUBLE(AV.TEMP_AVG) ELSE TO_DOUBLE(-32768) END AS TEMP_AVG
		, CASE WHEN MI.BP_MIN IS NOT NULL THEN TO_DOUBLE(MI.BP_MIN) ELSE TO_DOUBLE(-32768) END AS BP_MIN
		, CASE WHEN MA.BP_MAX IS NOT NULL THEN TO_DOUBLE(MA.BP_MAX) ELSE TO_DOUBLE(-32768) END AS BP_MAX
		, CASE WHEN AV.BP_AVG IS NOT NULL THEN TO_DOUBLE(AV.BP_AVG) ELSE TO_DOUBLE(-32768) END AS BP_AVG
		, CASE WHEN MI.HR_MIN IS NOT NULL THEN TO_DOUBLE(MI.HR_MIN) ELSE TO_DOUBLE(-32768) END AS HR_MIN
		, CASE WHEN MA.HR_MAX IS NOT NULL THEN TO_DOUBLE(MA.HR_MAX) ELSE TO_DOUBLE(-32768) END AS HR_MAX
		, CASE WHEN AV.HR_AVG IS NOT NULL THEN TO_DOUBLE(AV.HR_AVG) ELSE TO_DOUBLE(-32768) END AS HR_AVG
		, CASE WHEN MI.CVP_MIN IS NOT NULL THEN TO_DOUBLE(MI.CVP_MIN) ELSE TO_DOUBLE(-32768) END AS CVP_MIN
		, CASE WHEN MA.CVP_MAX IS NOT NULL THEN TO_DOUBLE(MA.CVP_MAX) ELSE TO_DOUBLE(-32768) END AS CVP_MAX
		, CASE WHEN AV.CVP_AVG IS NOT NULL THEN TO_DOUBLE(AV.CVP_AVG) ELSE TO_DOUBLE(-32768) END AS CVP_AVG
		, CASE WHEN MI.VENTILATED_RR_MIN IS NOT NULL THEN TO_DOUBLE(MI.VENTILATED_RR_MIN) ELSE TO_DOUBLE(-32768) END AS VENTILATED_RR_MIN
		, CASE WHEN MA.VENTILATED_RR_MAX IS NOT NULL THEN TO_DOUBLE(MA.VENTILATED_RR_MAX) ELSE TO_DOUBLE(-32768) END AS VENTILATED_RR_MAX
		, CASE WHEN AV.VENTILATED_RR_AVG IS NOT NULL THEN TO_DOUBLE(AV.VENTILATED_RR_AVG) ELSE TO_DOUBLE(-32768) END AS VENTILATED_RR_AVG
		, CASE WHEN MI.GCS_MIN IS NOT NULL THEN TO_DOUBLE(MI.GCS_MIN) ELSE TO_DOUBLE(-32768) END AS GCS_MIN
		, CASE WHEN MA.GCS_MAX IS NOT NULL THEN TO_DOUBLE(MA.GCS_MAX) ELSE TO_DOUBLE(-32768) END AS GCS_MAX
		, CASE WHEN AV.GCS_AVG IS NOT NULL THEN TO_DOUBLE(AV.GCS_AVG) ELSE TO_DOUBLE(-32768) END AS GCS_AVG
		, CASE WHEN MI.SPONTANEIOUS_RR_MIN IS NOT NULL THEN TO_DOUBLE(MI.SPONTANEIOUS_RR_MIN) ELSE TO_DOUBLE(-32768) END AS SPONTANEIOUS_RR_MIN
		, CASE WHEN MA.SPONTANEIOUS_RR_MAX IS NOT NULL THEN TO_DOUBLE(MA.SPONTANEIOUS_RR_MAX) ELSE TO_DOUBLE(-32768) END AS SPONTANEIOUS_RR_MAX
		, CASE WHEN AV.SPONTANEIOUS_RR_AVG IS NOT NULL THEN TO_DOUBLE(AV.SPONTANEIOUS_RR_AVG) ELSE TO_DOUBLE(-32768) END AS SPONTANEIOUS_RR_AVG
		, CASE WHEN MI.SPO2_MIN IS NOT NULL THEN TO_DOUBLE(MI.SPO2_MIN) ELSE TO_DOUBLE(-32768) END AS SPO2_MIN
		, CASE WHEN MA.SPO2_MAX IS NOT NULL THEN TO_DOUBLE(MA.SPO2_MAX) ELSE TO_DOUBLE(-32768) END AS SPO2_MAX
		, CASE WHEN AV.SPO2_AVG IS NOT NULL THEN TO_DOUBLE(AV.SPO2_AVG) ELSE TO_DOUBLE(-32768) END AS SPO2_AVG
		, CASE WHEN MI.FIO2_MIN IS NOT NULL THEN TO_DOUBLE(MI.FIO2_MIN) ELSE TO_DOUBLE(-32768) END AS FIO2_MIN
		, CASE WHEN MA.FIO2_MAX IS NOT NULL THEN TO_DOUBLE(MA.FIO2_MAX) ELSE TO_DOUBLE(-32768) END AS FIO2_MAX
		, CASE WHEN AV.FIO2_AVG IS NOT NULL THEN TO_DOUBLE(AV.FIO2_AVG) ELSE TO_DOUBLE(-32768) END AS FIO2_AVG

		, CASE WHEN CARE.FULLCODE_FLG IS NOT NULL THEN TO_DOUBLE(CARE.FULLCODE_FLG) ELSE TO_DOUBLE(-32768) END AS FULLCODE_FLG
		, CASE WHEN CARE.COMFORT_FLG IS NOT NULL THEN TO_DOUBLE(CARE.COMFORT_FLG) ELSE TO_DOUBLE(-32768) END AS COMFORT_FLG
		, CASE WHEN CARE.DNI_FLG IS NOT NULL THEN TO_DOUBLE(CARE.DNI_FLG) ELSE TO_DOUBLE(-32768) END AS DNI_FLG
		, CASE WHEN CARE.DNR_FLG IS NOT NULL THEN TO_DOUBLE(CARE.DNR_FLG) ELSE TO_DOUBLE(-32768) END AS DNR_FLG
		, CASE WHEN CARE.CPR_FLG IS NOT NULL THEN TO_DOUBLE(CARE.CPR_FLG) ELSE TO_DOUBLE(-32768) END AS CPR_FLG
		, CASE WHEN CARE.OTHER_FLG IS NOT NULL THEN TO_DOUBLE(CARE.OTHER_FLG) ELSE TO_DOUBLE(-32768) END AS OTHER_FLG

	FROM ( SELECT
			KDD.ID
			, ICU.INTIME AS ICUSTAY_INTIME
			, ICU.OUTTIME AS ICUSTAY_OUTTIME
			FROM PAL_CLSTR_TIER1_DATA_TBL KDD
			JOIN MIMIC2V26."icustayevents" ICU ON KDD.ID= ICU.ICUSTAY_ID
		) POP
		LEFT JOIN (SELECT
		DISTINCT ID
	, CASE WHEN FIRST_VALUE(TIMESTAMP_HR) OVER (PARTITION BY ID ORDER BY TIMESTAMP_HR ASC) <=24 THEN 1 ELSE 0 END AS VENT_1ST_24HR
	FROM (SELECT DISTINCT 
	POP.ID
	, 'ventilation' AS VARIABLE_NAME
	--, CH.CHARTTIME-POP.ICUSTAY_INTIME
	, ROUND( SECONDS_BETWEEN(CH.CHARTTIME,POP.ICUSTAY_INTIME)/(60*60), 2)AS TIMESTAMP_HR
	--, VENT.END_TIME AS TIMESTAMP_2
	, 1 AS VALUE1
	, 'flag' AS VALUE1UOM
	FROM (SELECT KDD.ID
	, ICU.INTIME AS ICUSTAY_INTIME
	, ICU.OUTTIME AS ICUSTAY_OUTTIME
	FROM PAL_CLSTR_TIER1_DATA_TBL KDD
	JOIN MIMIC2V26."icustayevents" ICU ON KDD.ID= ICU.ICUSTAY_ID
	
	) POP
	JOIN MIMIC2V26."chartevents" CH 
	  ON CH.ICUSTAY_ID=POP.ID 
	  AND CH.ITEMID IN (720,722)
	)
	) VENT ON POP.ID = VENT.ID
	LEFT JOIN (SELECT DISTINCT ID
	, CASE WHEN FIRST_VALUE(TIMESTAMP_HR) OVER (PARTITION BY ID ORDER BY TIMESTAMP_HR ASC) <=24 THEN 1 ELSE 0 END AS VASO_1ST_24HR
	FROM (SELECT 
	DISTINCT 
	POP.ID
	, 'vasopressor' AS VARIABLE_NAME
	, ROUND( SECONDS_BETWEEN(MED.CHARTTIME,POP.ICUSTAY_INTIME)/(60*60), 2)AS TIMESTAMP_HR
	, CASE WHEN MED.ITEMID=51 THEN ROUND(MED.DOSE/0.03*100,3)
		  WHEN MED.ITEMID=43 THEN ROUND(MED.DOSE/15*100,3)
		  WHEN MED.ITEMID=119 THEN ROUND(MED.DOSE/0.125*100,3)
		  WHEN MED.ITEMID=120 THEN ROUND(MED.DOSE/3*100,3)
		  WHEN MED.ITEMID=128 THEN ROUND(MED.DOSE/9.1*100,3)
		END AS VALUE1
	, '% of max dosage' AS VALUE1UOM
	FROM (SELECT KDD.ID
	, ICU.INTIME AS ICUSTAY_INTIME
	, ICU.OUTTIME AS ICUSTAY_OUTTIME
	FROM PAL_CLSTR_TIER1_DATA_TBL KDD
	JOIN MIMIC2V26."icustayevents" ICU ON KDD.ID= ICU.ICUSTAY_ID
	
	) POP
	JOIN MIMIC2V26."medevents" MED ON MED.ICUSTAY_ID=POP.ID 
	  AND MED.ITEMID IN (51,43,128,120, 119) --- A MORE CONCISE LIST
	  AND MED.DOSE>0
	  --AND MED.ITEMID IN (46,47,120,43,307,44,119,309,51,127,128)
	WHERE MED.CHARTTIME IS NOT NULL
	)
	) VASO ON POP.ID = VASO.ID
	LEFT JOIN (SELECT DISTINCT ID
	, CASE WHEN FIRST_VALUE(TIMESTAMP_HR) OVER (PARTITION BY ID ORDER BY TIMESTAMP_HR ASC) <=24 THEN 1 ELSE 0 END AS SEDATIVE_1ST_24HR
	FROM (SELECT 
	DISTINCT 
	POP.ID
	, 'sedative' AS VARIABLE_NAME
	, ROUND( SECONDS_BETWEEN(MED.CHARTTIME,POP.ICUSTAY_INTIME)/(60*60), 2)AS TIMESTAMP_HR
	, 1 AS VALUE1
	, 'flg' AS VALUE1UOM
	--, MED.ITEMID
	FROM (SELECT KDD.ID
	, ICU.INTIME AS ICUSTAY_INTIME
	, ICU.OUTTIME AS ICUSTAY_OUTTIME
	FROM PAL_CLSTR_TIER1_DATA_TBL KDD
	JOIN MIMIC2V26."icustayevents" ICU ON KDD.ID= ICU.ICUSTAY_ID
	
	) POP
	JOIN MIMIC2V26."medevents" MED ON MED.ICUSTAY_ID=POP.ID 
	  --AND MED.ITEMID IN (124,118,149,150,308,163,131)
	  AND ITEMID IN (149,163,131,124,118)
	WHERE MED.CHARTTIME IS NOT NULL
	)
	) SE ON POP.ID = SE.ID
	LEFT JOIN (
	SELECT ID
		,MIN(CASE WHEN VARIABLE_NAME = 'Temperature F' THEN "MIN" END) AS TEMP_MIN
		,MIN(CASE WHEN VARIABLE_NAME = 'MeanBP' THEN "MIN" END) AS BP_MIN
		,MIN(CASE WHEN VARIABLE_NAME = 'HR' THEN "MIN" END) AS HR_MIN
		,MIN(CASE WHEN VARIABLE_NAME = 'CVP' THEN "MIN" END) AS CVP_MIN
		,MIN(CASE WHEN VARIABLE_NAME = 'ventilated_RR' THEN "MIN" END) AS VENTILATED_RR_MIN
		,MIN(CASE WHEN VARIABLE_NAME = 'GCS' THEN "MIN" END) AS GCS_MIN
		,MIN(CASE WHEN VARIABLE_NAME = 'spontaneous_RR' THEN "MIN" END) AS SPONTANEIOUS_RR_MIN
		,MIN(CASE WHEN VARIABLE_NAME = 'SPO2' THEN "MIN" END) AS SPO2_MIN
		,MIN(CASE WHEN VARIABLE_NAME = 'FIO2' THEN "MIN" END) AS FIO2_MIN
	FROM (SELECT DISTINCT ID
	, VARIABLE_NAME
	, FIRST_VALUE(VALUE1) OVER (PARTITION BY ID, VARIABLE_NAME ORDER BY VALUE1 ASC) AS "MIN" 
	, FIRST_VALUE(VALUE1) OVER (PARTITION BY ID, VARIABLE_NAME ORDER BY VALUE1 DESC) AS "MAX"
	, ROUND(AVG(VALUE1) OVER (PARTITION BY ID, VARIABLE_NAME),3) AS "AVG"
	FROM (SELECT DISTINCT
	POP.ID
	, CASE WHEN CH.ITEMID IN (52,456) THEN 'MeanBP'
		  WHEN CH.ITEMID IN (678,679) THEN 'Temperature F'
		  WHEN CH.ITEMID =211 THEN 'HR'
		  WHEN CH.ITEMID =113 THEN 'CVP'
		  WHEN CH.ITEMID =646 THEN 'SPO2'
		  WHEN CH.ITEMID IN (190,3420) THEN 'FIO2'
		  WHEN  CH.ITEMID =198 THEN 'GCS'
		  --WHEN  CH.ITEMID =128 THEN 'Care_Protocol'
		  WHEN  CH.ITEMID =3580 THEN 'weight_kg'
		  WHEN CH.ITEMID =619 THEN 'ventilated_RR'
		  WHEN CH.ITEMID IN (614,615,618) THEN 'spontaneous_RR'
		END AS VARIABLE_NAME
	, ROUND( SECONDS_BETWEEN(CH.CHARTTIME,POP.ICUSTAY_INTIME)/(60*60), 2)AS TIMESTAMP_HR
	, ROUND(CH.VALUE1NUM, 3) AS VALUE1
	, CASE WHEN CH.ITEMID IN (190,3420) THEN 'fraction'
		ELSE CH.VALUE1UOM END AS VALUE1UOM
	FROM (SELECT KDD.ID
	, ICU.INTIME AS ICUSTAY_INTIME
	, ICU.OUTTIME AS ICUSTAY_OUTTIME
	FROM PAL_CLSTR_TIER1_DATA_TBL KDD
	JOIN MIMIC2V26."icustayevents" ICU ON KDD.ID= ICU.ICUSTAY_ID
	
	) POP
	JOIN MIMIC2V26."chartevents" CH 
	  ON POP.ID=CH.ICUSTAY_ID 
		AND CH.CHARTTIME <= ADD_DAYS(POP.ICUSTAY_INTIME,1)
	WHERE (CH.ITEMID IN (52,456) -- MEAN BP
		OR CH.ITEMID IN (678,679)  -- TEMPERATURE IN F
		OR CH.ITEMID =211 -- HR
		OR CH.ITEMID =113 -- CVP
		OR CH.ITEMID =646 -- SPO2
		OR CH.ITEMID IN (190,3420) -- FIO2
		OR CH.ITEMID =198 -- GCS
		--OR CH.ITEMID=128 -- CARE PROTOCOL
		OR CH.ITEMID=3580 -- WEIGHT_KG
		OR CH.ITEMID =619 -- VENTILATED_RR
		OR ( CH.ITEMID IN (614,615,618) AND CH.VALUE1NUM BETWEEN 2 AND 80))-- SPONTANEOUS_RR
		AND CH.VALUE1NUM IS NOT NULL
	)
	)
	GROUP BY ID
	) MI ON POP.ID = MI.ID
	LEFT JOIN (
	SELECT ID
		,MAX(CASE WHEN VARIABLE_NAME = 'Temperature F' THEN "MAX" END) AS TEMP_MAX
		,MAX(CASE WHEN VARIABLE_NAME = 'MeanBP' THEN "MAX" END) AS BP_MAX
		,MAX(CASE WHEN VARIABLE_NAME = 'HR' THEN "MAX" END) AS HR_MAX
		,MAX(CASE WHEN VARIABLE_NAME = 'CVP' THEN "MAX" END) AS CVP_MAX
		,MAX(CASE WHEN VARIABLE_NAME = 'ventilated_RR' THEN "MAX" END) AS VENTILATED_RR_MAX
		,MAX(CASE WHEN VARIABLE_NAME = 'GCS' THEN "MAX" END) AS GCS_MAX
		,MAX(CASE WHEN VARIABLE_NAME = 'spontaneous_RR' THEN "MAX" END) AS SPONTANEIOUS_RR_MAX
		,MAX(CASE WHEN VARIABLE_NAME = 'SPO2' THEN "MAX" END) AS SPO2_MAX
		,MAX(CASE WHEN VARIABLE_NAME = 'FIO2' THEN "MAX" END) AS FIO2_MAX
	FROM (SELECT DISTINCT ID
	, VARIABLE_NAME
	, FIRST_VALUE(VALUE1) OVER (PARTITION BY ID, VARIABLE_NAME ORDER BY VALUE1 ASC) AS "MIN" 
	, FIRST_VALUE(VALUE1) OVER (PARTITION BY ID, VARIABLE_NAME ORDER BY VALUE1 DESC) AS "MAX"
	, ROUND(AVG(VALUE1) OVER (PARTITION BY ID, VARIABLE_NAME),3) AS "AVG"
	FROM (SELECT DISTINCT
	POP.ID
	, CASE WHEN CH.ITEMID IN (52,456) THEN 'MeanBP'
		  WHEN CH.ITEMID IN (678,679) THEN 'Temperature F'
		  WHEN CH.ITEMID =211 THEN 'HR'
		  WHEN CH.ITEMID =113 THEN 'CVP'
		  WHEN CH.ITEMID =646 THEN 'SPO2'
		  WHEN CH.ITEMID IN (190,3420) THEN 'FIO2'
		  WHEN  CH.ITEMID =198 THEN 'GCS'
		  --WHEN  CH.ITEMID =128 THEN 'Care_Protocol'
		  WHEN  CH.ITEMID =3580 THEN 'weight_kg'
		  WHEN CH.ITEMID =619 THEN 'ventilated_RR'
		  WHEN CH.ITEMID IN (614,615,618) THEN 'spontaneous_RR'
		END AS VARIABLE_NAME
	, ROUND( SECONDS_BETWEEN(CH.CHARTTIME,POP.ICUSTAY_INTIME)/(60*60), 2)AS TIMESTAMP_HR
	--, NULL AS TIMESTAMP_2
	, ROUND(CH.VALUE1NUM, 3) AS VALUE1
	, CASE WHEN CH.ITEMID IN (190,3420) THEN 'fraction'
		ELSE CH.VALUE1UOM END AS VALUE1UOM
	FROM (SELECT KDD.ID
	, ICU.INTIME AS ICUSTAY_INTIME
	, ICU.OUTTIME AS ICUSTAY_OUTTIME
	FROM PAL_CLSTR_TIER1_DATA_TBL KDD
	JOIN MIMIC2V26."icustayevents" ICU ON KDD.ID= ICU.ICUSTAY_ID
	
	) POP
	JOIN MIMIC2V26."chartevents" CH 
	  ON POP.ID=CH.ICUSTAY_ID 
		AND CH.CHARTTIME <= ADD_DAYS(POP.ICUSTAY_INTIME,1)
	WHERE (CH.ITEMID IN (52,456) -- MEAN BP
		OR CH.ITEMID IN (678,679)  -- TEMPERATURE IN F
		OR CH.ITEMID =211 -- HR
		OR CH.ITEMID =113 -- CVP
		OR CH.ITEMID =646 -- SPO2
		OR CH.ITEMID IN (190,3420) -- FIO2
		OR CH.ITEMID =198 -- GCS
		--OR CH.ITEMID=128 -- CARE PROTOCOL
		OR CH.ITEMID=3580 -- WEIGHT_KG
		OR CH.ITEMID =619 -- VENTILATED_RR
		OR ( CH.ITEMID IN (614,615,618) AND CH.VALUE1NUM BETWEEN 2 AND 80))-- SPONTANEOUS_RR
		AND CH.VALUE1NUM IS NOT NULL
	)
	)
	GROUP BY ID
	) MA ON POP.ID = MA.ID
	LEFT JOIN (
	SELECT ID
		,AVG(CASE WHEN VARIABLE_NAME = 'Temperature F' THEN "AVG" END) AS TEMP_AVG
		,AVG(CASE WHEN VARIABLE_NAME = 'MeanBP' THEN "AVG" END) AS BP_AVG
		,AVG(CASE WHEN VARIABLE_NAME = 'HR' THEN "AVG" END) AS HR_AVG
		,AVG(CASE WHEN VARIABLE_NAME = 'CVP' THEN "AVG" END) AS CVP_AVG
		,AVG(CASE WHEN VARIABLE_NAME = 'ventilated_RR' THEN "AVG" END) AS VENTILATED_RR_AVG
		,AVG(CASE WHEN VARIABLE_NAME = 'GCS' THEN "AVG" END) AS GCS_AVG
		,AVG(CASE WHEN VARIABLE_NAME = 'spontaneous_RR' THEN "AVG" END) AS SPONTANEIOUS_RR_AVG
		,AVG(CASE WHEN VARIABLE_NAME = 'SPO2' THEN "AVG" END) AS SPO2_AVG
		,AVG(CASE WHEN VARIABLE_NAME = 'FIO2' THEN "AVG" END) AS FIO2_AVG
	FROM (SELECT DISTINCT ID
	, VARIABLE_NAME
	, FIRST_VALUE(VALUE1) OVER (PARTITION BY ID, VARIABLE_NAME ORDER BY VALUE1 ASC) AS "MIN" 
	, FIRST_VALUE(VALUE1) OVER (PARTITION BY ID, VARIABLE_NAME ORDER BY VALUE1 DESC) AS "MAX"
	, ROUND(AVG(VALUE1) OVER (PARTITION BY ID, VARIABLE_NAME),3) AS "AVG"
	FROM (SELECT DISTINCT
	POP.ID
	, CASE WHEN CH.ITEMID IN (52,456) THEN 'MeanBP'
		  WHEN CH.ITEMID IN (678,679) THEN 'Temperature F'
		  WHEN CH.ITEMID =211 THEN 'HR'
		  WHEN CH.ITEMID =113 THEN 'CVP'
		  WHEN CH.ITEMID =646 THEN 'SPO2'
		  WHEN CH.ITEMID IN (190,3420) THEN 'FIO2'
		  WHEN  CH.ITEMID =198 THEN 'GCS'
		  --WHEN  CH.ITEMID =128 THEN 'Care_Protocol'
		  WHEN  CH.ITEMID =3580 THEN 'weight_kg'
		  WHEN CH.ITEMID =619 THEN 'ventilated_RR'
		  WHEN CH.ITEMID IN (614,615,618) THEN 'spontaneous_RR'
		END AS VARIABLE_NAME
	, ROUND( SECONDS_BETWEEN(CH.CHARTTIME,POP.ICUSTAY_INTIME)/(60*60), 2)AS TIMESTAMP_HR
	, ROUND(CH.VALUE1NUM, 3) AS VALUE1
	, CASE WHEN CH.ITEMID IN (190,3420) THEN 'fraction'
		ELSE CH.VALUE1UOM END AS VALUE1UOM
	FROM (SELECT KDD.ID
	, ICU.INTIME AS ICUSTAY_INTIME
	, ICU.OUTTIME AS ICUSTAY_OUTTIME
	FROM PAL_CLSTR_TIER1_DATA_TBL KDD
	JOIN MIMIC2V26."icustayevents" ICU ON KDD.ID= ICU.ICUSTAY_ID
	
	) POP
	JOIN MIMIC2V26."chartevents" CH 
	  ON POP.ID=CH.ICUSTAY_ID 
		AND CH.CHARTTIME <= ADD_DAYS(POP.ICUSTAY_INTIME,1)
	WHERE (CH.ITEMID IN (52,456) -- MEAN BP
		OR CH.ITEMID IN (678,679)  -- TEMPERATURE IN F
		OR CH.ITEMID =211 -- HR
		OR CH.ITEMID =113 -- CVP
		OR CH.ITEMID =646 -- SPO2
		OR CH.ITEMID IN (190,3420) -- FIO2
		OR CH.ITEMID =198 -- GCS
		--OR CH.ITEMID=128 -- CARE PROTOCOL
		OR CH.ITEMID=3580 -- WEIGHT_KG
		OR CH.ITEMID =619 -- VENTILATED_RR
		OR ( CH.ITEMID IN (614,615,618) AND CH.VALUE1NUM BETWEEN 2 AND 80))-- SPONTANEOUS_RR
		AND CH.VALUE1NUM IS NOT NULL
	)
	)
	GROUP BY ID
	) AV ON POP.ID = AV.ID
	LEFT JOIN (SELECT DISTINCT ID
	, FIRST_VALUE(FULLCODE_FLG) OVER (PARTITION BY ID ORDER BY TIMESTAMP_HR DESC) AS FULLCODE_FLG
	, FIRST_VALUE(COMFORT_FLG) OVER (PARTITION BY ID ORDER BY TIMESTAMP_HR DESC) AS COMFORT_FLG
	, FIRST_VALUE(DNI_FLG) OVER (PARTITION BY ID ORDER BY TIMESTAMP_HR DESC) AS DNI_FLG
	, FIRST_VALUE(DNR_FLG) OVER (PARTITION BY ID ORDER BY TIMESTAMP_HR DESC) AS DNR_FLG
	, FIRST_VALUE(CPR_FLG) OVER (PARTITION BY ID ORDER BY TIMESTAMP_HR DESC) AS CPR_FLG
	, FIRST_VALUE(OTHER_FLG) OVER (PARTITION BY ID ORDER BY TIMESTAMP_HR DESC) AS OTHER_FLG
	FROM (SELECT DISTINCT
	POP.ID
	--,  'Care_Protocol' AS VARIABLE_NAME
	, ROUND( SECONDS_BETWEEN(CH.CHARTTIME,POP.ICUSTAY_INTIME)/(60*60), 2)AS TIMESTAMP_HR
	, CASE WHEN VALUE1 = 'Full Code' THEN 1 ELSE 0 END AS FULLCODE_FLG
	, CASE WHEN VALUE1 = 'Comfort Measures' THEN 1 ELSE 0 END AS COMFORT_FLG
	, CASE WHEN VALUE1 = 'Do Not Intubate' THEN 1 ELSE 0 END AS DNI_FLG
	, CASE WHEN VALUE1 = 'Do Not Resuscita' THEN 1 ELSE 0 END AS DNR_FLG
	, CASE WHEN VALUE1 = 'CPR Not Indicate' THEN 1 ELSE 0 END AS CPR_FLG
	, CASE WHEN VALUE1 = 'Other/Remarks' THEN 1 ELSE 0 END AS OTHER_FLG
	FROM (SELECT KDD.ID
	, ICU.INTIME AS ICUSTAY_INTIME
	, ICU.OUTTIME AS ICUSTAY_OUTTIME
	FROM PAL_CLSTR_TIER1_DATA_TBL KDD
	JOIN MIMIC2V26."icustayevents" ICU ON KDD.ID= ICU.ICUSTAY_ID
	
	) POP
	JOIN MIMIC2V26."chartevents" CH 
	  ON POP.ID=CH.ICUSTAY_ID 
	  AND CH.ITEMID=128 -- CARE PROTOCOL
	  AND CH.VALUE1 IS NOT NULL
	  AND CH.CHARTTIME <= ADD_DAYS(POP.ICUSTAY_INTIME,1)
	)
	) CARE ON POP.ID = CARE.ID
);

DROP TABLE PAL_AP_SEED_TBL;
CREATE COLUMN TABLE PAL_AP_SEED_TBL LIKE PAL_AP_SEED_T;

DROP TABLE #PAL_CONTROL_TBL;
CREATE LOCAL TEMPORARY COLUMN TABLE #PAL_CONTROL_TBL LIKE PAL_CONTROL_T;
INSERT INTO #PAL_CONTROL_TBL VALUES('THREAD_NUMBER',2,null,null);
INSERT INTO #PAL_CONTROL_TBL VALUES('MAX_ITERATION',500,null,null);
INSERT INTO #PAL_CONTROL_TBL VALUES('CON_ITERATION',100,null,null);
INSERT INTO #PAL_CONTROL_TBL VALUES('DAMP',null,0.9,null);
INSERT INTO #PAL_CONTROL_TBL VALUES('PREFERENCE',null,0.5,null);
INSERT INTO #PAL_CONTROL_TBL VALUES('DISTANCE_METHOD',2,null,null);
INSERT INTO #PAL_CONTROL_TBL VALUES('CLUSTER_NUMBER',0,null,null);

DROP PROCEDURE PAL_AP_TIER2;
CREATE PROCEDURE PAL_AP_TIER2 () 
	LANGUAGE SQLSCRIPT AS
BEGIN
	DECLARE table_exists INT := 0;
	DECLARE t1_cluster_count INT := 0;
	DECLARE iteration_count INT := 0;

	SELECT MAX(RESULT) INTO t1_cluster_count FROM PAL_AP_RESULTS_TIER1;
	
	WHILE :iteration_count <= :t1_cluster_count DO
		EXECUTE IMMEDIATE 'CREATE COLUMN TABLE PAL_CLSTR_TIER2X_DATA_TBL AS ( SELECT * FROM PAL_CLSTR_TIER2_DATA_TBL WHERE ID IN ( SELECT ID FROM PAL_AP_RESULTS_TIER1 WHERE RESULT = ' || :iteration_count || ') )';
		table_exists := 0;
		SELECT COUNT(*) INTO table_exists FROM "TABLES" WHERE "SCHEMA_NAME" = CURRENT_SCHEMA AND "TABLE_NAME" = 'PAL_AP_RESULTS_TIER2_' || :iteration_count ;
		IF :table_exists = 1 THEN
			EXECUTE IMMEDIATE 'DROP TABLE PAL_AP_RESULTS_TIER2_' || :iteration_count;
		END IF;
		EXECUTE IMMEDIATE 'CREATE COLUMN TABLE PAL_AP_RESULTS_TIER2_' || :iteration_count || ' LIKE PAL_AP_RESULTS_T';
		EXECUTE IMMEDIATE 'COMMIT';
		EXECUTE IMMEDIATE 'CALL PAL_AP(PAL_CLSTR_TIER2_DATA_TBL, PAL_AP_SEED_TBL, #PAL_CONTROL_TBL, PAL_AP_RESULTS_TIER2_' || :iteration_count || ') with OVERVIEW';
		EXECUTE IMMEDIATE 'DROP TABLE PAL_CLSTR_TIER2X_DATA_TBL';
		iteration_count := :iteration_count + 1;
		EXECUTE IMMEDIATE 'COMMIT';
	END WHILE;
END;

CALL PAL_AP_TIER2();
